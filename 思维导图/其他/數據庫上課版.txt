一、MVC
1、搭建MVC
2、添加Model
3、添加MainController

4、添加Login acion和页面；直接拷贝页面布局（去除js代码）
5、拷贝添加js、css、图片等静态文件：Content目录
6、设置默认启动页面为 /Main/Login
7、启动项目，检查登录页面效果

8、添加Main acion和页面；直接拷贝页面布局（去除js代码）
9、在Login页面中写登录按钮的点击事件，直接报页面替换成/Main/Main页面--（注：这是为了测试页面跳转和页面效果，登录的逻辑会在稍后详讲）

10、实现登陆页面 验证码图片的生成，并把验证码字符串放入session；（session介绍）
 10.1、新建Common目录，拷贝ValidCodeUtils.cs（验证码图片和验证码生成工具类），说明原理
 10.2、使用ValidCodeUtils生成验证码字符串和图片
 10.3、将验证码字符串存入session中
 10.4、把图片返回到视图
 10.5、修改登录页面 验证码图片的路径为 /Main/ValideCode
 10.6、验证效果
11、实现验证码图片点击更换功能
 11.1、写验证码图片的点击事件，在点击事件中修改验证码图片的url
 11.2、添加当前时间作为参数的作用
 
12、实现登录功能  
 PD模型 Linq查询写法 密码加密
 
13、登录页面记住登录功能
 控制器携带数据到页面，页面通过Razor语法获取数据

ViewData与ViewBag的区别

（1）ViewData是字典类型，赋值方式用字典方式，通过key值读取对应的value，ViewData[“myName”]

（2）ViewBag是动态类型，使用时直接添加属性赋值即可ViewBag.myName

（3）ViewBag和ViewData只在当前Action中有效，等同于View

（4）ViewData和ViewBag中的值可以互相访问，因为ViewBag的实现中包含了ViewData


14、主页面获取用户信息
 通过Razor语法获取数据

联表查询――内连接

//SQL Server
SELECT  SYS_Grade.gradeName, SYS_Academe.academeName, SYS_Grade.gradeID
FROM      SYS_Grade INNER JOIN
                   SYS_Academe ON SYS_Grade.academeID = SYS_Academe.academeID

select 表名.字段名，表名.字段名
from 表1 INNER JOIN 表2  ON 连接条件
                INNER JOIN 表3  ON  连接条件


//Linq  
from 变量1 in 数据源1
join 变量2  in 数据源2  on  连接条件
join 变量3 in 数据源3  on 连接条件
select 


