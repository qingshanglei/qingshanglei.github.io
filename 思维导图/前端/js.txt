     滚动条滚动事件：onscroll      例：window.onscroll=function() {      }
获取滚动条跟顶部的距离：scrollTop=document.documentElement.scrollTop||document.bocy.scrollTop;
 
   通过function关键字    自定义方法/函数
                自定义函数：function openChangeModal(){           }      
                   function openModal(num){     形参:num        
例：onClick="openModal(0)"      onClick="openModal(1)"      num==0 弹出0
num==1 弹出1       alert(num);                }   
                函数的调用：openChangeModal();
       返回页面中所有脚本的集合:  document.scripts
       返回当前文档的标题:  document.title
       返回文档完整的URL：document.URL 
       返回文档中匹配指定的CSS选择器的第一元素 : document.querySelector() 
       页面输出：  document.write()
       创建元素节点：document.createElemet()
 例： var tr=document.createElement("tr");    tr.innerHTML="aafoawef"
       创建文本节点 : document.createTNode()
      向父元素追加子元素：appendChild();           例:tbody.appendChild(tr);
       给元素设置/添加HTML.文本 :   innerHTML    例：tbody.inneHTML="<p>fawikawfn </p>"; 
    
     数组排序：      var   box =[12,45,56 ,63,42];
      document.write("原素组：" +box“<br>”);
      document.write("顺序排列：" +box.sort（function(a,b）{return a-b;})+“<br>”);
      document.write("倒序排列：" +box.sort（function(a,b）{return b-a;})+“<br>”);
    字母排序：按英语字母标排序。      例：var   on =["dw", "sfl","afow","whr"];
     document.write("原数组：”+on+"<br>");
     document.write("顺序排列：+on.sort()+"<br>");
     document.write("倒序排列：+on.sort().reverse()+"<br>");    reverse():反转数组的顺序. 

    公式： array.splice(index,howmany,item1,...,itemX)
      index:规定从何处添加/删除元素            howmany:规定应该删除多少元素
      item：要添加到数组的新元素
       
      ceil(x) :上舍入       例： var box = -524;      alert (Math.ceil(box)); =>   534 向前进1    
     floor(x):下舍入       var box =3.14      alert(Math.floor(box)); =>  3   
      round(x) :四舍五入    
       random() ：0~1之间的随机数       例：arlert(Math.random());
     同级运算，从左到右        任何值作- ，*，/运算时自动转换为Number,可以利用这个特性作隐式转换
       
    三目(元)运算：     条件表达式？语句1：语句二；  例：h=h<=9?"0"+h:h;
            
        检测：typeof       例：  var a="123.45";               console.log(typeof a);

     无限计时器：setInterval      例：setInterval(function() ){  alert(123);    },2000 
    parseInt() : 字符串转换成整形；   例： alert(parseInt(oImg.style.left));
     parseFloat() :字符串转换为浮点数；
        转义符号 ：  反邪杠       “ \”                     例 : var str =" <div class=\"box\">  <div>"
                       “ \" ”表示“ ””            “ \n” ：换行 
                         “  \' ” 表示 “ ’”            “\t”:  制表符
                           
    var  num =12;                    变量的声明：  通过var 关键字声明     12：关键字
            标识符：变量名      函数名     属性名        
         小驼峰： helloWorld         大驼峰：HelloWorld

      基本数据类型：   字符串：String      布尔值：Boolean( 真:true/ 假：false)
空值：Null              未定义 : Undifined     数值：Number         数组：Array
    
       引用数据类型 :   对象：Object  
    类型转换，将其他的数据类型转换为 ： String Number Boolean 
       同级运算，从左到右        任何值作- ，*，/运算时自动转换为Number,可以利用这个特性作隐式转换
        NaN：飞数       
     max：最大值    min:最小值。    例 : console.log(Math.max(2,64,15,516));  => 516   
正无穷大 ：Infinity              负无穷大-Infinity
       滚动条： overflow:auro;
   
  
   onmouseout：移出事件(当鼠标指针移出元素时运行脚本)
   onmouseover="()"    :移入事件(当鼠标指针移至元素之上时运行脚本)

   页面加载事件：window.onload = function() {      };

  function name() {
    要执行的代码
}

   style:样式
         
   prompt:("");

     对象：object       集合:array

     点击事件:onclick="()"
  
   
         
      获取ID：（getElementByld（“ID”））
 
     获取行位置：insertRow（）
  
       通过类名获取元素：(获取的是集合:var trs=[21,54,3,45,841] )getElementsByClassName() 
例： var trs =document.getElementsByClassNeme("trhide");
      集合的获取(从零开始)：var trs =[21,54,3,45,841];   
例：获取45；                   console.log(trs[3]);

      控制台输出：（console.log(内容)）

      输入框：（prompt（“内容”））

      确认框：(confirm("内容")  ）
    
      警示框：（anlert（"内容"））
    
      文档：（documet）
   
      cursor：pointer（手势形状）      :cp
 
       position:sbsolute;(绝对定位)

       position:fixed;(固定定位)
 
      list-style:none（去黑点）

        setItem(keyname(添加键)，value(值))       例：var person={ "姓名"："莫子" , 
"年龄":"18" ， "性别":"女"             }
                           

       overflow:hidden(条)
      
        return（返回）
        
       false（事件冒泡）内☞外

       true（事件捕获）  外☞内    

         浏览器中的参数{【wheelDelta    ,      detail 】看正负值}
   
 b=e.detail
       报错：no-unused-vars ：没被使用

      i++； => (i+1)             i--；  =>（i-1）       %：取模(取余数)     ！:非      &&：与 

        || ：或                if( 条件){      }      
                                  if(number % 2 ==0) { 偶数    }else {    奇数}    ------------if判断是否为奇偶数
arr[x] % 10 !=7   -----------个位数！=7                             arr[x]/10%10!=7;  --------十位数！=7

          for循环  ：                      for( 初始化变量，循环条件；循环迭代 ){     循环语句}
例： 例：for(var i=0;i<trs.length;i++){      
trs[i].style.display="table-row";    }         获取集合中的元素长度(个数）:length

          添加对象属性:  var obj=new object();                obj.name="张狂"；      obj.age=19;     
obj.tel="1294719182";               console.log(obj.name);          
 获取员工： var boss=new object();              boss.name="我是老板"；   boss.AA=obj;     
         console.log(boss);                     
         运算符：in(检查是否有指定的属性，有true,没false)     例：consol.log("name" in boss);
公式："属性名" in  对象











